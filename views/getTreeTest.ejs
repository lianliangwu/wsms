<!DOCTYPE html>
<html>
<head>
  <title></title>

</head>

<body>

	<!-- wulianliang: jsree -->
	<link href="lib/jstree/themes/default/style.min.css" rel="stylesheet" />
	<script src="http://code.jquery.com/jquery-1.11.1.js"></script>
	<script src="lib/jstree/jstree.min.js"></script> 
		
	<!-- wulianliang: ztree -->
	<link rel="stylesheet" href="lib/ztree/css/demo.css" type="text/css">
	<link rel="stylesheet" href="lib/ztree/css/zTreeStyle/zTreeStyle.css" type="text/css">

	<script type="text/javascript" src="lib/ztree/js/jquery.ztree.core-3.5.js"></script>
	<script type="text/javascript" src="lib/ztree/js/jquery.ztree.excheck-3.5.js"></script>
	<script type="text/javascript" src="lib/ztree/js/jquery.ztree.exedit-3.5.js"></script>
	

  <div id="container">
  <ul>
    <li>Root node
      <ul>
        <li>Child node 1</li>
        <li>Child node 2</li>
      </ul>
    </li>
  </ul>
  </div>
  <script>
  $(function() {
    $('#container').jstree();
  });
  </script>
  

  <script type="text/javascript">

	$(function () {

		// (1) version: jstree
		// var container = document.createElement('div');
		
		// loadModelInfo();
		// document.body.appendChild(container); 

		// function loadModelInfo() {
			
		// 	var jstr = document.createElement('div');
		// 	jstr.className = 'jstree_demo_div';
		// 	container.appendChild(jstr);
		// 	console.log(container);

		// 	// container.dom.appendChild("<div id=\"jstree_demo_div\"></div>");
		// 	$('.jstree_demo_div').jstree({ 'core' : {
		// 		"check_callback" : true,
		// 	    'data' : [
		// 	       'Simple root node',
		// 	       {
		// 	         'text' : 'Root node 2',
		// 	         'state' : {
		// 	           'opened' : true,
		// 	           'selected' : true
		// 	         },
		// 	         'children' : [
		// 	           { 'text' : 'Child 1' },
		// 	           'Child 2'
		// 	         ]
		// 	      	}
		// 	    ]
		// 	},
		// 	"plugins" : [ "contextmenu", "dnd" ] });
		// };

		// (2) version: ztree
		//ztree
		var ztreeDiv = document.createElement('ul');
		ztreeDiv.className = 'ztree';
		ztreeDiv.id = "treeDemo";

		document.body.appendChild(ztreeDiv);

		//container.dom.appendChild("<div class='zTreeDemoBackground left'> <ul id='treeDemo' class='ztree'></ul></div>");

		//ztree
		var setting = {
			view: {
				addHoverDom: addHoverDom,
				removeHoverDom: removeHoverDom,
				selectedMulti: false
			},
			edit: {
				enable: true,
				editNameSelectAll: true,
				showRemoveBtn: showRemoveBtn,
				showRenameBtn: showRenameBtn
			},
			data: {
				simpleData: {
					enable: true
				}
			},
			callback: {
				beforeDrag: beforeDrag,
				beforeEditName: beforeEditName,
				beforeRemove: beforeRemove,
				beforeRename: beforeRename,
				onRemove: onRemove,
				onRename: onRename
			}
		};

			var zNodes =[
				{ id:1, pId:0, name:"父节点 1", open:true},
				{ id:11, pId:1, name:"叶子节点 1-1"},
				{ id:12, pId:1, name:"叶子节点 1-2"},
				{ id:13, pId:1, name:"叶子节点 1-3"},
				{ id:2, pId:0, name:"父节点 2", open:true},
				{ id:21, pId:2, name:"叶子节点 2-1"},
				{ id:22, pId:2, name:"叶子节点 2-2"},
				{ id:23, pId:2, name:"叶子节点 2-3"},
				{ id:3, pId:0, name:"父节点 3", open:true},
				{ id:31, pId:3, name:"叶子节点 3-1"},
				{ id:32, pId:3, name:"叶子节点 3-2"},
				{ id:33, pId:3, name:"叶子节点 3-3"}
			];
			var log, className = "dark";
			function beforeDrag(treeId, treeNodes) {
				return false;
			}
			function beforeEditName(treeId, treeNode) {
				className = (className === "dark" ? "":"dark");
				showLog("[ "+getTime()+" beforeEditName ]&nbsp;&nbsp;&nbsp;&nbsp; " + treeNode.name);
				var zTree = $.fn.zTree.getZTreeObj("treeDemo");
				zTree.selectNode(treeNode);
				return confirm("进入节点 -- " + treeNode.name + " 的编辑状态吗？");
			}
			function beforeRemove(treeId, treeNode) {
				className = (className === "dark" ? "":"dark");
				showLog("[ "+getTime()+" beforeRemove ]&nbsp;&nbsp;&nbsp;&nbsp; " + treeNode.name);
				var zTree = $.fn.zTree.getZTreeObj("treeDemo");
				zTree.selectNode(treeNode);
				return confirm("确认删除 节点 -- " + treeNode.name + " 吗？");
			}
			function onRemove(e, treeId, treeNode) {
				showLog("[ "+getTime()+" onRemove ]&nbsp;&nbsp;&nbsp;&nbsp; " + treeNode.name);
			}
			function beforeRename(treeId, treeNode, newName, isCancel) {
				className = (className === "dark" ? "":"dark");
				showLog((isCancel ? "<span style='color:red'>":"") + "[ "+getTime()+" beforeRename ]&nbsp;&nbsp;&nbsp;&nbsp; " + treeNode.name + (isCancel ? "</span>":""));
				if (newName.length == 0) {
					alert("节点名称不能为空.");
					var zTree = $.fn.zTree.getZTreeObj("treeDemo");
					setTimeout(function(){zTree.editName(treeNode)}, 10);
					return false;
				}
				return true;
			}
			function onRename(e, treeId, treeNode, isCancel) {
				showLog((isCancel ? "<span style='color:red'>":"") + "[ "+getTime()+" onRename ]&nbsp;&nbsp;&nbsp;&nbsp; " + treeNode.name + (isCancel ? "</span>":""));
			}
			function showRemoveBtn(treeId, treeNode) {
				return !treeNode.isFirstNode;
			}
			function showRenameBtn(treeId, treeNode) {
				return !treeNode.isLastNode;
			}
			function showLog(str) {
				if (!log) log = $("#log");
				log.append("<li class='"+className+"'>"+str+"</li>");
				if(log.children("li").length > 8) {
					log.get(0).removeChild(log.children("li")[0]);
				}
			}
			function getTime() {
				var now= new Date(),
				h=now.getHours(),
				m=now.getMinutes(),
				s=now.getSeconds(),
				ms=now.getMilliseconds();
				return (h+":"+m+":"+s+ " " +ms);
			}

			var newCount = 1;
			function addHoverDom(treeId, treeNode) {
				var sObj = $("#" + treeNode.tId + "_span");
				if (treeNode.editNameFlag || $("#addBtn_"+treeNode.tId).length>0) return;
				var addStr = "<span class='button add' id='addBtn_" + treeNode.tId
					+ "' title='add node' onfocus='this.blur();'></span>";
				sObj.after(addStr);
				var btn = $("#addBtn_"+treeNode.tId);
				if (btn) btn.bind("click", function(){
					var zTree = $.fn.zTree.getZTreeObj("treeDemo");
					zTree.addNodes(treeNode, {id:(100 + newCount), pId:treeNode.id, name:"new node" + (newCount++)});
					return false;
				});
			};
			function removeHoverDom(treeId, treeNode) {
				$("#addBtn_"+treeNode.tId).unbind().remove();
			};
			function selectAll() {
				var zTree = $.fn.zTree.getZTreeObj("treeDemo");
				zTree.setting.edit.editNameSelectAll =  $("#selectAll").attr("checked");
			}
			
			$.fn.zTree.init($("#treeDemo"), setting, zNodes);

	})

</script>

</body>


</html>
